{"mappings":"ACEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,YACjC,EAAQ,EAAM,aAAa,CAAC,SAElC,SAAS,EAAa,CAAG,CAAE,CAAK,EAC9B,IAAM,EAAO,EAAI,QAAQ,CAAC,EAAM,CAEhC,GAAI,CAAC,EACH,MAAO,GAGT,IAAM,EAAO,EAAK,WAAW,CAAC,IAAI,UAElC,AAAK,MAAM,WAAW,EAAK,OAAO,CAAC,QAAS,MAIrC,EAAK,WAAW,GAHd,WAAW,EAAK,OAAO,CAAC,QAAS,IAI5C,CAuBA,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,eArB3B,EAEN,CAFM,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,QAE1C,IAAI,CAAC,SAAC,CAAA,CAAM,CAAjB,EACE,IAAM,EAAS,EAAa,EAmBlB,GAlBJ,EAAS,EAAa,EAkBlB,UAhBV,AAAI,EAAS,EACJ,GAGL,EAAS,EACJ,EAGF,CACT,GAEA,EAAK,OAAO,CAAC,SAAC,CAAd,EAAsB,OAAA,EAAM,WAAW,CAAC,E,EAMxC,EACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar table = document.querySelector(\"table\");\nvar headers = table.querySelectorAll(\"thead th\");\nvar tbody = table.querySelector(\"tbody\");\nfunction getCellValue(row, index) {\n    var cell = row.children[index];\n    if (!cell) return \"\";\n    var text = cell.textContent.trim();\n    if (!isNaN(parseFloat(text.replace(/[$,]/g, \"\")))) return parseFloat(text.replace(/[$,]/g, \"\"));\n    return text.toLowerCase();\n}\nfunction sortTable(index) {\n    var rows = Array.from(tbody.querySelectorAll(\"tr\"));\n    rows.sort(function(rowA, rowB) {\n        var valueA = getCellValue(rowA, index);\n        var valueB = getCellValue(rowB, index);\n        if (valueA < valueB) return -1;\n        if (valueA > valueB) return 1;\n        return 0;\n    });\n    rows.forEach(function(row) {\n        return tbody.appendChild(row);\n    });\n}\nheaders.forEach(function(header, index) {\n    header.addEventListener(\"click\", function() {\n        sortTable(index);\n    });\n});\n\n//# sourceMappingURL=index.32931fe4.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('thead th');\nconst tbody = table.querySelector('tbody');\n\nfunction getCellValue(row, index) {\n  const cell = row.children[index];\n\n  if (!cell) {\n    return '';\n  }\n\n  const text = cell.textContent.trim();\n\n  if (!isNaN(parseFloat(text.replace(/[$,]/g, '')))) {\n    return parseFloat(text.replace(/[$,]/g, ''));\n  }\n\n  return text.toLowerCase();\n}\n\nfunction sortTable(index) {\n  const rows = Array.from(tbody.querySelectorAll('tr'));\n\n  rows.sort((rowA, rowB) => {\n    const valueA = getCellValue(rowA, index);\n    const valueB = getCellValue(rowB, index);\n\n    if (valueA < valueB) {\n      return -1;\n    }\n\n    if (valueA > valueB) {\n      return 1;\n    }\n\n    return 0;\n  });\n\n  rows.forEach((row) => tbody.appendChild(row));\n}\n\nheaders.forEach((header, index) => {\n  header.addEventListener('click', () => {\n    sortTable(index);\n  });\n});\n"],"names":["table","document","querySelector","headers","querySelectorAll","tbody","getCellValue","row","index","cell","children","text","textContent","trim","isNaN","parseFloat","replace","toLowerCase","forEach","header","addEventListener","rows","Array","from","sort","rowA","rowB","valueA","valueB","appendChild"],"version":3,"file":"index.32931fe4.js.map"}